"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/components/ThermalScanner.tsx":
/*!*******************************************!*\
  !*** ./src/components/ThermalScanner.tsx ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mediapipe_tasks_vision__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mediapipe/tasks-vision */ \"(pages-dir-browser)/./node_modules/@mediapipe/tasks-vision/vision_bundle.mjs\");\n/* harmony import */ var _ResultScreen__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ResultScreen */ \"(pages-dir-browser)/./src/components/ResultScreen.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n\n\n\nconst PROCESSING_WIDTH = 360;\nconst PROCESSING_HEIGHT = 640;\n/**\r\n * Maps a grayscale intensity value (0-255) to a thermal color.\r\n * @param intensity The grayscale value.\r\n * @returns An [R, G, B] color array.\r\n */ const getThermalColor = (intensity)=>{\n    const normalized = Math.max(0, Math.min(1, intensity / 255));\n    if (normalized < 0.3) {\n        // Dark Blue to Cyan (extended range)\n        const t = normalized / 0.3;\n        return [\n            0,\n            Math.floor(t * 255),\n            255\n        ];\n    } else if (normalized < 0.35) {\n        // Cyan to Very Mild Green (short range)\n        const t = (normalized - 0.3) / 0.05;\n        return [\n            0,\n            255,\n            Math.floor(255 * (1 - t))\n        ];\n    } else if (normalized < 0.5) {\n        // Mild Green to Yellow (starts and ends faster)\n        const t = (normalized - 0.35) / 0.15;\n        return [\n            Math.floor(t * 255),\n            255,\n            0\n        ];\n    } else if (normalized < 0.75) {\n        // Yellow to Red\n        const t = (normalized - 0.5) / 0.25;\n        return [\n            255,\n            Math.floor(255 * (1 - t)),\n            0\n        ];\n    } else {\n        // Red to Orange\n        const t = (normalized - 0.75) / 0.25;\n        return [\n            255,\n            Math.floor(t * 165),\n            0\n        ];\n    }\n};\n// Simple Lottie component using iframe\nconst LottieCountdown = (param)=>{\n    let { onComplete } = param;\n    _s();\n    const [isCompleted, setIsCompleted] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"LottieCountdown.useEffect\": ()=>{\n            // Listen for the animation completion\n            const handleMessage = {\n                \"LottieCountdown.useEffect.handleMessage\": (event)=>{\n                    if (event.data === \"lottie-complete\" && !isCompleted) {\n                        setIsCompleted(true);\n                        onComplete();\n                    }\n                }\n            }[\"LottieCountdown.useEffect.handleMessage\"];\n            window.addEventListener(\"message\", handleMessage);\n            // Fallback timer in case the event doesn't fire\n            const fallbackTimer = setTimeout({\n                \"LottieCountdown.useEffect.fallbackTimer\": ()=>{\n                    if (!isCompleted) {\n                        setIsCompleted(true);\n                        onComplete();\n                    }\n                }\n            }[\"LottieCountdown.useEffect.fallbackTimer\"], 4000) // 4 seconds to ensure full countdown\n            ;\n            return ({\n                \"LottieCountdown.useEffect\": ()=>{\n                    window.removeEventListener(\"message\", handleMessage);\n                    clearTimeout(fallbackTimer);\n                }\n            })[\"LottieCountdown.useEffect\"];\n        }\n    }[\"LottieCountdown.useEffect\"], [\n        onComplete,\n        isCompleted\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            position: \"absolute\",\n            inset: 0,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            zIndex: 30,\n            background: \"rgba(0, 0, 0, 0.3)\",\n            backdropFilter: \"blur(2px)\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"iframe\", {\n            src: \"data:text/html;charset=utf-8,%3Chtml%3E%3Chead%3E%3Cscript src='https://unpkg.com/@lottiefiles/dotlottie-wc@0.6.2/dist/dotlottie-wc.js' type='module'%3E%3C/script%3E%3C/head%3E%3Cbody style='margin:0;padding:0;background:transparent;display:flex;justify-content:center;align-items:center;height:100vh;'%3E%3Cdotlottie-wc src='https://lottie.host/e5113891-a79e-4395-a656-76372b815e5c/0kJGXH5ssH.lottie' style='width: 1000px;height: 1000px' speed='1' autoplay%3E%3C/dotlottie-wc%3E%3C/body%3E%3Cscript%3Edocument.querySelector('dotlottie-wc').addEventListener('complete', () => %7B parent.postMessage('lottie-complete', '*'); %7D);%3C/script%3E%3C/body%3E%3C/html%3E\",\n            style: {\n                width: \"1000px\",\n                height: \"1000px\",\n                border: \"none\",\n                background: \"transparent\"\n            },\n            title: \"Countdown Animation\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n            lineNumber: 87,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n        lineNumber: 75,\n        columnNumber: 5\n    }, undefined);\n};\n_s(LottieCountdown, \"SaNq15iri2kwmUpIV/5IZzxmPSw=\");\n_c = LottieCountdown;\n// Enhanced Animated Temperature Display Component\nconst AnimatedTemperatureDisplay = (param)=>{\n    let { targetTemp, isVisible } = param;\n    _s1();\n    const [currentTemp, setCurrentTemp] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(10);\n    const [isAnimationComplete, setIsAnimationComplete] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const animationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const startTimeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AnimatedTemperatureDisplay.useEffect\": ()=>{\n            if (!isVisible) {\n                setCurrentTemp(10);\n                setIsAnimationComplete(false);\n                return;\n            }\n            startTimeRef.current = Date.now();\n            const animate = {\n                \"AnimatedTemperatureDisplay.useEffect.animate\": ()=>{\n                    const elapsed = Date.now() - (startTimeRef.current || 0);\n                    const duration = 2000 // 2 seconds total animation\n                    ;\n                    if (elapsed >= duration) {\n                        setCurrentTemp(targetTemp);\n                        setIsAnimationComplete(true);\n                        return;\n                    }\n                    const progress = elapsed / duration;\n                    const easeOutQuart = 1 - Math.pow(1 - progress, 4);\n                    const tempRange = targetTemp - 10;\n                    const newTemp = 10 + tempRange * easeOutQuart;\n                    setCurrentTemp(Math.round(newTemp * 10) / 10);\n                    animationRef.current = requestAnimationFrame(animate);\n                }\n            }[\"AnimatedTemperatureDisplay.useEffect.animate\"];\n            animationRef.current = requestAnimationFrame(animate);\n            return ({\n                \"AnimatedTemperatureDisplay.useEffect\": ()=>{\n                    if (animationRef.current) {\n                        cancelAnimationFrame(animationRef.current);\n                    }\n                }\n            })[\"AnimatedTemperatureDisplay.useEffect\"];\n        }\n    }[\"AnimatedTemperatureDisplay.useEffect\"], [\n        targetTemp,\n        isVisible\n    ]);\n    if (!isVisible) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            position: \"absolute\",\n            bottom: \"10%\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            zIndex: 20,\n            pointerEvents: \"none\",\n            color: \"#ffffff\",\n            fontSize: \"6rem\",\n            fontWeight: 900,\n            fontFamily: '\"Orbitron\", \"Courier New\", monospace',\n            textShadow: \"0 0 20px rgba(255, 255, 255, 0.9), 0 0 40px #00ff88, 0 0 60px #00ff88, 0 0 80px #00ff88\",\n            animation: isAnimationComplete ? \"temperatureFinalGlow 1.5s ease-in-out infinite alternate, temperatureFloat 3s ease-in-out infinite\" : \"temperatureCountingGlow 0.3s ease-in-out infinite alternate, temperatureScale 0.1s ease-in-out infinite alternate\",\n            filter: \"drop-shadow(0 0 30px #00ff88)\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                style: {\n                    display: \"inline-block\",\n                    animation: !isAnimationComplete ? \"temperatureDigitFlicker 0.2s ease-in-out infinite\" : \"none\"\n                },\n                children: [\n                    currentTemp.toFixed(1),\n                    \"\\xb0\"\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                lineNumber: 170,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    width: \"120%\",\n                    height: \"120%\",\n                    background: \"radial-gradient(circle, rgba(0, 255, 136, 0.3) 0%, rgba(0, 255, 136, 0.1) 50%, transparent 70%)\",\n                    borderRadius: \"50%\",\n                    animation: \"temperatureBackgroundPulse 2s ease-in-out infinite\",\n                    zIndex: -1\n                }\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                lineNumber: 178,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    width: \"200%\",\n                    height: \"200%\",\n                    pointerEvents: \"none\",\n                    zIndex: -1\n                },\n                children: [\n                    ...Array(6)\n                ].map((_, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            position: \"absolute\",\n                            width: \"4px\",\n                            height: \"4px\",\n                            background: \"#00ff88\",\n                            borderRadius: \"50%\",\n                            top: \"\".concat(20 + i * 10, \"%\"),\n                            left: \"\".concat(30 + i * 8, \"%\"),\n                            animation: \"temperatureParticle\".concat(i, \" \").concat(2 + i * 0.3, \"s ease-in-out infinite\"),\n                            boxShadow: \"0 0 10px #00ff88\"\n                        }\n                    }, i, false, {\n                        fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                        lineNumber: 205,\n                        columnNumber: 11\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                lineNumber: 192,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"style\", {\n                children: \"\\n        @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&display=swap');\\n        @keyframes temperatureCountingGlow {\\n          0% { text-shadow: 0 0 15px rgba(255, 255, 255, 0.8), 0 0 30px #00ff88, 0 0 45px #00ff88, 0 0 60px #00ff88; transform: translateX(-50%) scale(1); }\\n          100% { text-shadow: 0 0 25px rgba(255, 255, 255, 1), 0 0 50px #00ff88, 0 0 75px #00ff88, 0 0 100px #00ff88; transform: translateX(-50%) scale(1.05); }\\n        }\\n        @keyframes temperatureFinalGlow {\\n          0% { text-shadow: 0 0 20px rgba(255, 255, 255, 0.9), 0 0 40px #00ff88, 0 0 60px #00ff88, 0 0 80px #00ff88; }\\n          100% { text-shadow: 0 0 30px rgba(255, 255, 255, 1), 0 0 60px #00ff88, 0 0 90px #00ff88, 0 0 120px #00ff88; }\\n        }\\n        @keyframes temperatureScale {\\n          0% { transform: translateX(-50%) scale(1); }\\n          100% { transform: translateX(-50%) scale(1.02); }\\n        }\\n        @keyframes temperatureFloat {\\n          0%, 100% { transform: translateX(-50%) translateY(0px); }\\n          50% { transform: translateX(-50%) translateY(-10px); }\\n        }\\n        @keyframes temperatureDigitFlicker {\\n          0%, 100% { opacity: 1; }\\n          50% { opacity: 0.8; }\\n        }\\n        @keyframes temperatureBackgroundPulse {\\n          0%, 100% { transform: translate(-50%, -50%) scale(1); opacity: 0.3; }\\n          50% { transform: translate(-50%, -50%) scale(1.2); opacity: 0.1; }\\n        }\\n        @keyframes temperatureParticle0 { 0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.8; } 50% { transform: translateY(-20px) rotate(180deg); opacity: 0.3; } }\\n        @keyframes temperatureParticle1 { 0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.6; } 50% { transform: translateY(-15px) rotate(-180deg); opacity: 0.2; } }\\n        @keyframes temperatureParticle2 { 0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.7; } 50% { transform: translateY(-25px) rotate(90deg); opacity: 0.4; } }\\n        @keyframes temperatureParticle3 { 0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.5; } 50% { transform: translateY(-18px) rotate(-90deg); opacity: 0.1; } }\\n        @keyframes temperatureParticle4 { 0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.8; } 50% { transform: translateY(-22px) rotate(270deg); opacity: 0.3; } }\\n        @keyframes temperatureParticle5 { 0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.6; } 50% { transform: translateY(-16px) rotate(-270deg); opacity: 0.2; } }\\n      \"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                lineNumber: 221,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n        lineNumber: 151,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(AnimatedTemperatureDisplay, \"brMXbhma6Y628DSijvCnn4egQkU=\");\n_c1 = AnimatedTemperatureDisplay;\nconst ThermalScanner = ()=>{\n    _s2();\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // OPTIMIZATION: Add a separate, hidden canvas for offscreen processing\n    const processingCanvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const streamRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [phase, setPhase] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"idle\");\n    const [result, setResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isCool, setIsCool] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [faceLandmarker, setFaceLandmarker] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isCameraReady, setIsCameraReady] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [targetTemperature, setTargetTemperature] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [showTemperature, setShowTemperature] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const animationFrameId = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(undefined);\n    const phaseStartTime = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    // This central useEffect hook manages all phase transitions and their durations\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ThermalScanner.useEffect\": ()=>{\n            phaseStartTime.current = Date.now();\n            if (phase === \"scanDown\") {\n                const timer = setTimeout({\n                    \"ThermalScanner.useEffect.timer\": ()=>setPhase(\"thermalHoldAfterDown\")\n                }[\"ThermalScanner.useEffect.timer\"], 3000);\n                return ({\n                    \"ThermalScanner.useEffect\": ()=>clearTimeout(timer)\n                })[\"ThermalScanner.useEffect\"];\n            }\n            if (phase === \"thermalHoldAfterDown\") {\n                const timer = setTimeout({\n                    \"ThermalScanner.useEffect.timer\": ()=>setPhase(\"scanUp\")\n                }[\"ThermalScanner.useEffect.timer\"], 3000);\n                return ({\n                    \"ThermalScanner.useEffect\": ()=>clearTimeout(timer)\n                })[\"ThermalScanner.useEffect\"];\n            }\n            if (phase === \"scanUp\") {\n                const timer = setTimeout({\n                    \"ThermalScanner.useEffect.timer\": ()=>setPhase(\"thermalHoldAfterUp\")\n                }[\"ThermalScanner.useEffect.timer\"], 3000);\n                return ({\n                    \"ThermalScanner.useEffect\": ()=>clearTimeout(timer)\n                })[\"ThermalScanner.useEffect\"];\n            }\n            if (phase === \"thermalHoldAfterUp\") {\n                const cool = Math.random() < 0.9;\n                setIsCool(cool);\n                setResult(cool ? \"Cool vibes detected. Come on in!\" : \"Whoa, you're on fire — cool down and try again!\");\n                const tempTimer = setTimeout({\n                    \"ThermalScanner.useEffect.tempTimer\": ()=>{\n                        const tempValue = cool ? Math.random() * 10 + 80 : Math.random() * 10 + 90;\n                        setTargetTemperature(tempValue);\n                        setShowTemperature(true);\n                    }\n                }[\"ThermalScanner.useEffect.tempTimer\"], 1000);\n                const phaseTimer = setTimeout({\n                    \"ThermalScanner.useEffect.phaseTimer\": ()=>{\n                        setPhase(\"result\");\n                        stopCamera();\n                    }\n                }[\"ThermalScanner.useEffect.phaseTimer\"], 5000);\n                return ({\n                    \"ThermalScanner.useEffect\": ()=>{\n                        clearTimeout(tempTimer);\n                        clearTimeout(phaseTimer);\n                    }\n                })[\"ThermalScanner.useEffect\"];\n            }\n        }\n    }[\"ThermalScanner.useEffect\"], [\n        phase\n    ]);\n    // This useEffect handles the video processing and thermal effect application\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ThermalScanner.useEffect\": ()=>{\n            let lastVideoTime = -1;\n            const processVideo = {\n                \"ThermalScanner.useEffect.processVideo\": ()=>{\n                    const video = videoRef.current;\n                    const displayCanvas = canvasRef.current;\n                    // OPTIMIZATION: Get the offscreen processing canvas\n                    const processingCanvas = processingCanvasRef.current;\n                    if (!video || !displayCanvas || !processingCanvas || !isCameraReady) {\n                        animationFrameId.current = requestAnimationFrame(processVideo);\n                        return;\n                    }\n                    const displayCtx = displayCanvas.getContext(\"2d\");\n                    const processingCtx = processingCanvas.getContext(\"2d\", {\n                        willReadFrequently: true\n                    });\n                    if (!displayCtx || !processingCtx || video.paused || video.ended || video.currentTime === lastVideoTime) {\n                        animationFrameId.current = requestAnimationFrame(processVideo);\n                        return;\n                    }\n                    lastVideoTime = video.currentTime;\n                    // --- OPTIMIZED PROCESSING FLOW ---\n                    // 1. Draw video to the small, offscreen processing canvas\n                    processingCtx.save();\n                    processingCtx.scale(-1, 1); // Apply mirror effect\n                    processingCtx.translate(-PROCESSING_WIDTH, 0);\n                    processingCtx.drawImage(video, 0, 0, PROCESSING_WIDTH, PROCESSING_HEIGHT);\n                    processingCtx.restore();\n                    // 2. Calculate thermal effect progress\n                    const now = Date.now();\n                    const elapsed = now - phaseStartTime.current;\n                    let currentThermalProgress = 0;\n                    if (phase === \"thermalHoldAfterDown\" || phase === \"thermalHoldAfterUp\") {\n                        currentThermalProgress = Math.min(1, elapsed / 3000);\n                    } else if (phase === \"result\") {\n                        currentThermalProgress = Math.max(0, 1 - elapsed / 1000);\n                    }\n                    const isThermalPhase = phase === \"thermalHoldAfterDown\" || phase === \"thermalHoldAfterUp\" || phase === \"result\";\n                    // 3. Apply thermal effect ONLY on the small canvas if in the correct phase\n                    if (isThermalPhase && currentThermalProgress > 0) {\n                        const imageData = processingCtx.getImageData(0, 0, PROCESSING_WIDTH, PROCESSING_HEIGHT);\n                        const data = imageData.data;\n                        for(let i = 0; i < data.length; i += 4){\n                            const gray = 0.299 * data[i] + 0.587 * data[i + 1] + 0.114 * data[i + 2];\n                            const [thermalR, thermalG, thermalB] = getThermalColor(gray);\n                            data[i] = Math.floor(data[i] * (1 - currentThermalProgress) + thermalR * currentThermalProgress);\n                            data[i + 1] = Math.floor(data[i + 1] * (1 - currentThermalProgress) + thermalG * currentThermalProgress);\n                            data[i + 2] = Math.floor(data[i + 2] * (1 - currentThermalProgress) + thermalB * currentThermalProgress);\n                        }\n                        processingCtx.putImageData(imageData, 0, 0);\n                    }\n                    // 4. Clear the main display canvas and scale the processed image up to fill it.\n                    // This is much faster than manipulating the full-size canvas pixels.\n                    displayCtx.clearRect(0, 0, displayCanvas.width, displayCanvas.height);\n                    displayCtx.drawImage(processingCanvas, 0, 0, displayCanvas.width, displayCanvas.height);\n                    // 5. Run face detection (this can still run on the original video element)\n                    if (phase === \"idle\" && faceLandmarker) {\n                        const detectionResult = faceLandmarker.detectForVideo(video, performance.now());\n                        if (detectionResult.faceLandmarks && detectionResult.faceLandmarks.length > 0) {\n                            setPhase(\"countdown\");\n                        }\n                    }\n                    animationFrameId.current = requestAnimationFrame(processVideo);\n                }\n            }[\"ThermalScanner.useEffect.processVideo\"];\n            animationFrameId.current = requestAnimationFrame(processVideo);\n            return ({\n                \"ThermalScanner.useEffect\": ()=>{\n                    if (animationFrameId.current) cancelAnimationFrame(animationFrameId.current);\n                }\n            })[\"ThermalScanner.useEffect\"];\n        }\n    }[\"ThermalScanner.useEffect\"], [\n        isCameraReady,\n        faceLandmarker,\n        phase\n    ]);\n    // Restart logic\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ThermalScanner.useEffect\": ()=>{\n            if (phase !== \"result\") return;\n            const restartTimeout = setTimeout({\n                \"ThermalScanner.useEffect.restartTimeout\": ()=>{\n                    setResult(null);\n                    setIsCool(false);\n                    setTargetTemperature(0);\n                    setShowTemperature(false);\n                    setPhase(\"idle\");\n                    startCamera();\n                }\n            }[\"ThermalScanner.useEffect.restartTimeout\"], 5000);\n            return ({\n                \"ThermalScanner.useEffect\": ()=>clearTimeout(restartTimeout)\n            })[\"ThermalScanner.useEffect\"];\n        }\n    }[\"ThermalScanner.useEffect\"], [\n        phase\n    ]);\n    // MediaPipe FaceLandmarker setup\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ThermalScanner.useEffect\": ()=>{\n            const createFaceLandmarker = {\n                \"ThermalScanner.useEffect.createFaceLandmarker\": async ()=>{\n                    try {\n                        const vision = await _mediapipe_tasks_vision__WEBPACK_IMPORTED_MODULE_2__.FilesetResolver.forVisionTasks(\"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\");\n                        const landmarker = await _mediapipe_tasks_vision__WEBPACK_IMPORTED_MODULE_2__.FaceLandmarker.createFromOptions(vision, {\n                            baseOptions: {\n                                modelAssetPath: \"./face_landmarker.task\",\n                                delegate: \"GPU\"\n                            },\n                            runningMode: \"VIDEO\",\n                            numFaces: 1,\n                            minFaceDetectionConfidence: 0.3,\n                            minFacePresenceConfidence: 0.3,\n                            minTrackingConfidence: 0.3\n                        });\n                        setFaceLandmarker(landmarker);\n                    } catch (error) {\n                        console.error(\"Error initializing face landmarker:\", error);\n                        alert(\"Failed to initialize face detection. Please ensure the model file is accessible.\");\n                    }\n                }\n            }[\"ThermalScanner.useEffect.createFaceLandmarker\"];\n            createFaceLandmarker();\n        }\n    }[\"ThermalScanner.useEffect\"], []);\n    const startCamera = async ()=>{\n        try {\n            if (streamRef.current) {\n                streamRef.current.getTracks().forEach((track)=>track.stop());\n            }\n            const stream = await navigator.mediaDevices.getUserMedia({\n                video: {\n                    facingMode: \"user\",\n                    width: {\n                        ideal: 1280\n                    },\n                    height: {\n                        ideal: 720\n                    }\n                }\n            });\n            streamRef.current = stream;\n            if (videoRef.current) {\n                videoRef.current.srcObject = stream;\n                videoRef.current.onloadedmetadata = ()=>{\n                    var _videoRef_current;\n                    (_videoRef_current = videoRef.current) === null || _videoRef_current === void 0 ? void 0 : _videoRef_current.play().catch((err)=>console.error(\"Error playing video:\", err));\n                    setIsCameraReady(true);\n                };\n            }\n        } catch (error) {\n            console.error(\"Error accessing camera:\", error);\n            alert(\"Could not access the camera. Please check permissions.\");\n        }\n    };\n    const stopCamera = ()=>{\n        if (streamRef.current) {\n            streamRef.current.getTracks().forEach((track)=>track.stop());\n            streamRef.current = null;\n        }\n        if (videoRef.current) {\n            videoRef.current.srcObject = null;\n        }\n        setIsCameraReady(false);\n    };\n    const handleCountdownComplete = ()=>{\n        setPhase(\"scanDown\");\n    };\n    // Effect to handle initial camera start and final cleanup\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ThermalScanner.useEffect\": ()=>{\n            startCamera();\n            return ({\n                \"ThermalScanner.useEffect\": ()=>stopCamera()\n            })[\"ThermalScanner.useEffect\"];\n        }\n    }[\"ThermalScanner.useEffect\"], []);\n    // Resize the display canvas if the window is resized\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ThermalScanner.useEffect\": ()=>{\n            const handleResize = {\n                \"ThermalScanner.useEffect.handleResize\": ()=>{\n                    if (canvasRef.current) {\n                        canvasRef.current.width = window.innerWidth;\n                        canvasRef.current.height = window.innerHeight;\n                    }\n                }\n            }[\"ThermalScanner.useEffect.handleResize\"];\n            window.addEventListener('resize', handleResize);\n            handleResize(); // Initial resize\n            return ({\n                \"ThermalScanner.useEffect\": ()=>window.removeEventListener('resize', handleResize)\n            })[\"ThermalScanner.useEffect\"];\n        }\n    }[\"ThermalScanner.useEffect\"], []);\n    if (phase === \"result\" && result) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ResultScreen__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n            isCool: isCool\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n            lineNumber: 495,\n            columnNumber: 12\n        }, undefined);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"scanner-container\",\n        children: [\n            phase === \"countdown\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LottieCountdown, {\n                onComplete: handleCountdownComplete\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                lineNumber: 500,\n                columnNumber: 33\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"camera-wrapper\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                        ref: canvasRef,\n                        className: \"camera-canvas\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                        lineNumber: 503,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                        ref: processingCanvasRef,\n                        style: {\n                            display: \"none\"\n                        },\n                        width: PROCESSING_WIDTH,\n                        height: PROCESSING_HEIGHT\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                        lineNumber: 506,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"video\", {\n                        ref: videoRef,\n                        autoPlay: true,\n                        playsInline: true,\n                        muted: true,\n                        style: {\n                            display: \"none\"\n                        }\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                        lineNumber: 513,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                        src: \"./images/frame.png\",\n                        className: \"frame-overlay\",\n                        alt: \"Frame overlay\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                        lineNumber: 514,\n                        columnNumber: 9\n                    }, undefined),\n                    !isCameraReady && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(StatusText, {\n                        children: \"Initializing Camera...\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                        lineNumber: 516,\n                        columnNumber: 28\n                    }, undefined),\n                    isCameraReady && phase === \"idle\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(StatusText, {\n                        children: \"Please look at the camera.\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                        lineNumber: 517,\n                        columnNumber: 47\n                    }, undefined),\n                    (phase === \"scanDown\" || phase === \"scanUp\") && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ScanningLine, {\n                        direction: phase\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                        lineNumber: 518,\n                        columnNumber: 58\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AnimatedTemperatureDisplay, {\n                        targetTemp: targetTemperature,\n                        isVisible: showTemperature\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                        lineNumber: 519,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                lineNumber: 501,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"style\", {\n                children: \"\\n        .scanner-container {\\n          position: relative;\\n          width: 100vw;\\n          height: 100vh;\\n          overflow: hidden;\\n          background: black;\\n        }\\n        .camera-wrapper {\\n          position: relative;\\n          width: 100%;\\n          height: 100%;\\n          display: flex;\\n          justify-content: center;\\n          align-items: center;\\n        }\\n        .camera-canvas {\\n          width: 100%;\\n          height: 100%;\\n          object-fit: cover;\\n          background: black;\\n        }\\n        .frame-overlay {\\n          position: absolute;\\n          top: 50%;\\n          left: 50%;\\n          transform: translate(-50%, -50%);\\n          width: 100%;\\n          height: 100%;\\n          object-fit: cover;\\n          pointer-events: none;\\n          z-index: 25;\\n        }\\n      \"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n                lineNumber: 522,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n        lineNumber: 499,\n        columnNumber: 5\n    }, undefined);\n};\n_s2(ThermalScanner, \"HkLAovAk61jsM9HAKhM1IF1xSYw=\");\n_c2 = ThermalScanner;\nconst StatusText = (param)=>{\n    let { children } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            position: \"absolute\",\n            inset: 0,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            zIndex: 20,\n            pointerEvents: \"none\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n            style: {\n                color: \"white\",\n                fontSize: \"2.25rem\",\n                fontWeight: \"800\",\n                background: \"rgba(0,0,0,0.7)\",\n                padding: \"1rem 2rem\",\n                borderRadius: \"0.5rem\",\n                backdropFilter: \"blur(5px)\",\n                border: \"1px solid rgba(34,211,238,0.3)\"\n            },\n            children: children\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n            lineNumber: 572,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n        lineNumber: 561,\n        columnNumber: 3\n    }, undefined);\n};\n_c3 = StatusText;\nconst ScanningLine = (param)=>{\n    let { direction } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"4px\",\n            background: \"linear-gradient(90deg, transparent, #00ff88, #00ccff, #00ff88, transparent)\",\n            boxShadow: \"0 0 10px #00ff88, 0 0 20px #00ff88, 0 0 30px #00ff88\",\n            zIndex: 20,\n            animation: direction === \"scanDown\" ? \"scanDown 3s linear\" : \"scanUp 3s linear\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"style\", {\n            children: \"\\n        @keyframes scanDown {\\n          0% { top: 0%; }\\n          100% { top: 100%; }\\n        }\\n        @keyframes scanUp {\\n          0% { top: 100%; }\\n          100% { top: 0%; }\\n        }\\n      \"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n            lineNumber: 603,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Acer\\\\Desktop\\\\thermal-scan\\\\thermal-scan\\\\src\\\\components\\\\ThermalScanner.tsx\",\n        lineNumber: 591,\n        columnNumber: 5\n    }, undefined);\n};\n_c4 = ScanningLine;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ThermalScanner);\nvar _c, _c1, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LottieCountdown\");\n$RefreshReg$(_c1, \"AnimatedTemperatureDisplay\");\n$RefreshReg$(_c2, \"ThermalScanner\");\n$RefreshReg$(_c3, \"StatusText\");\n$RefreshReg$(_c4, \"ScanningLine\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/components/ThermalScanner.tsx\n"));

/***/ })

});